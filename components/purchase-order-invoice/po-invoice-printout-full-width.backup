'use client'

import React, { forwardRef } from 'react'
import { Separator } from '@/components/ui/separator'
import { MapPin, Phone, Mail, Building2, FileText } from 'lucide-react'

import {
  type InvoiceDetail,
  type PurchaseOrderItem
} from '@/components/purchase-order-invoice/po-invoice-action'
import { PurchaseOrderStatusBadge } from '@/components/purchase-order/purchase-order-status-badge'

interface InvoicePrintoutProps {
  purchaseOrder: InvoiceDetail
}

export const InvoicePrintout = forwardRef<HTMLDivElement, InvoicePrintoutProps>(
  ({ purchaseOrder }, ref) => {
    const formatCurrency = (amount: number) => {
      return new Intl.NumberFormat('id-ID', {
        style: 'currency',
        currency: 'IDR',
        minimumFractionDigits: 0,
      }).format(amount)
    }

    const formatDate = (dateString: string) => {
      return new Date(dateString).toLocaleDateString('id-ID', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      })
    }

    const formatDateTime = (dateString: string) => {
      return new Date(dateString).toLocaleDateString('id-ID', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
      })
    }

    // Transform InvoiceDetail to PurchaseOrderData structure for the printout
    const poData = {
      id: purchaseOrder.purchaseOrder.id,
      supplier_id: purchaseOrder.purchaseOrder.supplier_id,
      total_amount: purchaseOrder.purchaseOrder.total_amount,
      status: purchaseOrder.purchaseOrder.status,
      created_at: purchaseOrder.purchaseOrder.created_at,
      created_by: purchaseOrder.purchaseOrder.created_by,
      suppliers: purchaseOrder.purchaseOrder.supplier,
      profiles: purchaseOrder.purchaseOrder.profiles,
      purchase_order_items: purchaseOrder.items
    } as const

    return (
      <div
        ref={ref}
        className="invoice-printout max-w-none w-full bg-white text-black print:shadow-none"
        style={{
          fontFamily: 'system-ui, -apple-system, sans-serif',
          lineHeight: '1.4',
          fontSize: '12px',
          padding: '20px',
          margin: '0',
          background: 'white',
        }}
      >
        {/* Header */}
        <div className="text-center mb-6 pb-4 border-b-2 border-gray-800">
          <div className="flex items-center justify-center gap-3 mb-3">
            <Building2 className="h-7 w-7 text-blue-600" />
            <h1 className="text-2xl font-bold text-gray-900">APOTEK FARMA</h1>
          </div>
          <p className="text-gray-600 text-sm mb-1">Jl. Raya No. 123, Jakarta</p>
          <p className="text-gray-600 text-sm mb-1">Tel: (021) 1234-5678 | Email: info@apotekfarma.com</p>
          <div className="flex items-center justify-center gap-2 text-xs text-gray-500 mt-2">
            <FileText className="h-3 w-3" />
            <span>PURCHASE ORDER</span>
          </div>
        </div>

        {/* Invoice Information */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
          <div className="space-y-3">
            <div>
              <h2 className="text-lg font-semibold text-gray-900 mb-2">Invoice Details</h2>
              <div className="space-y-1.5 text-sm">
                <div className="flex justify-between">
                  <span className="font-medium">PO Number:</span>
                  <span className="font-mono">PO-{String(poData.id).padStart(4, '0')}</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-medium">Date:</span>
                  <span>{formatDate(poData.created_at)}</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-medium">Created By:</span>
                  <span>{poData.profiles?.full_name || poData.created_by}</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-medium">Status:</span>
                  <PurchaseOrderStatusBadge status={poData.status} />
                </div>
              </div>
            </div>
          </div>

          <div className="space-y-3">
            <div>
              <h2 className="text-lg font-semibold text-gray-900 mb-2">Supplier Information</h2>
              <div className="space-y-1.5 text-sm">
                <div className="flex justify-between">
                  <span className="font-medium">Supplier:</span>
                  <span className="font-medium">{poData.suppliers?.name || 'N/A'}</span>
                </div>
                {poData.suppliers?.contact_person && (
                  <div className="flex justify-between">
                    <span className="font-medium">Contact Person:</span>
                    <span>{poData.suppliers.contact_person}</span>
                  </div>
                )}
                {poData.suppliers?.phone && (
                  <div className="flex items-center justify-between gap-2">
                    <Phone className="h-3 w-3 text-gray-500" />
                    <span className="text-xs">{poData.suppliers.phone}</span>
                  </div>
                )}
                {poData.suppliers?.email && (
                  <div className="flex items-center justify-between gap-2">
                    <Mail className="h-3 w-3 text-gray-500" />
                    <span className="text-xs">{poData.suppliers.email}</span>
                  </div>
                )}
                {poData.suppliers?.address && (
                  <div className="flex items-start justify-between gap-2">
                    <MapPin className="h-3 w-3 text-gray-500 mt-0.5" />
                    <span className="text-xs text-right">{poData.suppliers.address}</span>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>

        {/* Items Table */}
        <div className="mb-6">
          <h2 className="text-lg font-semibold text-gray-900 mb-3">Order Items</h2>
          <div className="overflow-hidden border border-gray-300 rounded-lg">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-3 py-2 text-left text-xs font-semibold text-gray-900 border-b border-gray-300">
                    No
                  </th>
                  <th className="px-3 py-2 text-left text-xs font-semibold text-gray-900 border-b border-gray-300">
                    Product Name
                  </th>
                  <th className="px-3 py-2 text-left text-xs font-semibold text-gray-900 border-b border-gray-300">
                    Code
                  </th>
                  <th className="px-3 py-2 text-center text-xs font-semibold text-gray-900 border-b border-gray-300">
                    Qty
                  </th>
                  <th className="px-3 py-2 text-right text-xs font-semibold text-gray-900 border-b border-gray-300">
                    Unit Price
                  </th>
                  <th className="px-3 py-2 text-right text-xs font-semibold text-gray-900 border-b border-gray-300">
                    Total
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {poData.purchase_order_items?.map((item: PurchaseOrderItem, index: number) => (
                  <tr key={item.id} className="hover:bg-gray-50">
                    <td className="px-3 py-2 text-xs text-gray-900 border-b border-gray-200">
                      {index + 1}
                    </td>
                    <td className="px-3 py-2 text-xs font-medium text-gray-900 border-b border-gray-200">
                      {item.products?.name || item.product_name || `Product ${item.product_id}`}
                    </td>
                    <td className="px-3 py-2 text-xs text-gray-600 border-b border-gray-200 font-mono">
                      {item.products?.code || item.product_code || 'N/A'}
                    </td>
                    <td className="px-3 py-2 text-xs text-center text-gray-900 border-b border-gray-200">
                      {item.quantity}
                    </td>
                    <td className="px-3 py-2 text-xs text-right text-gray-900 border-b border-gray-200">
                      {formatCurrency(item.price_buy)}
                    </td>
                    <td className="px-3 py-2 text-xs text-right font-medium text-gray-900 border-b border-gray-200">
                      {formatCurrency(item.total)}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Summary */}
        <div className="flex justify-end mb-6">
          <div className="w-56 bg-gray-50 rounded-lg p-4 border border-gray-200">
            <div className="space-y-2">
              <div className="flex justify-between text-xs">
                <span className="font-medium text-gray-700">Total Items:</span>
                <span className="font-semibold">{poData.purchase_order_items?.length || 0}</span>
              </div>
              <Separator />
              <div className="flex justify-between text-base font-bold">
                <span className="text-gray-900">Grand Total:</span>
                <span className="text-green-600">{formatCurrency(poData.total_amount)}</span>
              </div>
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="border-t-2 border-gray-800 pt-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-1.5">
              <h3 className="font-semibold text-gray-900 text-sm">Terms & Conditions</h3>
              <ul className="text-xs text-gray-600 space-y-0.5">
                <li>â€¢ Payment due within 30 days of invoice date</li>
                <li>â€¢ Late payments may incur additional charges</li>
                <li>â€¢ Goods delivered subject to availability</li>
                <li>â€¢ All prices are exclusive of taxes</li>
              </ul>
            </div>
            <div className="text-center">
              <div className="space-y-1">
                <div className="text-xs text-gray-600">
                  Generated on: {formatDateTime(new Date().toISOString())}
                </div>
                <div className="text-xs text-gray-500">
                  This is a computer-generated document
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Print Styles */}
        <style jsx>{`
          @media print {
            .invoice-printout {
              width: 100% !important;
              max-width: none !important;
              margin: 0 !important;
              padding: 20px !important;
              box-shadow: none !important;
              background: white !important;
              font-size: 11px !important;
              line-height: 1.3 !important;
            }
            .invoice-printout * {
              background: transparent !important;
              background-image: none !important;
            }
            .invoice-printout table {
              font-size: 10px !important;
            }
            .invoice-printout th,
            .invoice-printout td {
              padding: 6px 8px !important;
            }
            .invoice-printout .text-xs {
              font-size: 9px !important;
            }
            .invoice-printout .text-sm {
              font-size: 10px !important;
            }
            .invoice-printout .text-base {
              font-size: 11px !important;
            }
            .invoice-printout .text-lg {
              font-size: 12px !important;
            }
            .invoice-printout .text-2xl {
              font-size: 14px !important;
            }
            .invoice-printout .text-3xl {
              font-size: 16px !important;
            }
            .no-print {
              display: none !important;
            }
          }
        `}</style>
      </div>
    )
  }
)

InvoicePrintout.displayName = 'InvoicePrintout'